{"ast":null,"code":"var _jsxFileName = \"D:\\\\UTCN AC CSC\\\\AN 2\\\\DSTEMA3\\\\Tema3- Chat Demo\\\\React\\\\react-demo-ana\\\\src\\\\components\\\\ChatPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport SockJsClient from 'react-stomp';\nimport '../App.css';\nimport { Button } from 'react-bootstrap';\nimport { Form } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [messageInput, setMessageInput] = useState('');\n  const [username, setUsername] = useState('');\n  const [topics, setTopics] = useState([]);\n\n  // ca sa putem trimite mesaje, trebe sa facem o referinta catre obiectul de client socket, pe care o initializam cu null la inceput\n  //clientRef este un obiect de referință (Ref) \n  //creat folosind useRef hook din React\n  //Aceasta este o modalitate de a păstra o referință către un element sau un obiect în cadrul componentelor funcționale în React, \n  //care poate fi utilizată pentru a accesa și manipula acest element sau obiect.\n  const clientRef = useRef(null);\n  useEffect(() => {\n    // Utilizarea useEffect pentru a seta username-ul când componenta este randata\n    setUsername(localStorage.getItem('username'));\n\n    // Funcția returnată va fi apelată când componenta este dezactivată, inchidem conexiunea\n    return () => {\n      if (clientRef.current && clientRef.current.deactivate) {\n        clientRef.current.deactivate();\n      }\n    };\n  }, []);\n\n  // Funcție pentru a gestiona schimbarea valorii în input-ul de mesaj\n  const handleMessageChange = e => {\n    setMessageInput(e.target.value);\n  };\n\n  // Funcție pentru a trimite mesajul\n  const handleSendMessage = () => {\n    //aici voi schimbati, va mai adaugati ce va mai trebuie, eu am lasat reciever random\n    const message = {\n      sender: username,\n      receiver: 'admin',\n      content: messageInput\n    };\n    //current este proprietatea din obiectul de referință care conține referința efectivă către elementul sau obiectul \n    //pe care l-ați legat cu useRef. \n    //Prin accesarea proprietății current, puteți interacționa cu obiectul sau elementul din afara ciclului de viață al componentei.\n    //practic un mod de a accesa obiectul in sine, nu doar referinta\n\n    //sendMessage este o metodă specifică a acestui client WebSocket (SockJsClient) \n    //care este utilizată pentru a trimite mesaje către serverul WebSocket\n    if (clientRef.current && clientRef.current.sendMessage) {\n      clientRef.current.sendMessage('/app/chat', JSON.stringify(message));\n    }\n\n    //golim mesajul dupa ce l-am trimis\n    setMessageInput('');\n  };\n\n  // cand primim mesaj, pe langa cele pe care le avem deja vrem sa le pastram\n  //de asta punem cu .. inainte, asta inseamna ca la array-ul de mesaje deja existent, mai adaugam pe cel pe care l-am primit\n  const onMessageReceived = msg => {\n    setMessages([...messages, msg]);\n  };\n\n  //setam topicul aici ca sa evitam sa ne dea eroare de connection cannot be established yet\n  let onConnected = () => {\n    setTopics(['/topic/messages']);\n    console.log(\"Connected!!\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-container\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender === username ? 'sender-me' : 'sender-other'}` //aici am vrut sa fiu smechera sa pun clase diferite pt mesajele mele vs cele primite\n        ,\n        children: [msg.sender, \": \", msg.content]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)\n      //aici pot accesa senderu si contetu, ca mi le-am definit asa in java, voi afisati cum vreti\n      )\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        value: messageInput,\n        onChange: handleMessageChange,\n        placeholder: \"Type your message...\",\n        style: {\n          marginTop: \"5px\"\n        },\n        className: \"bg-dark text-light\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        marginTop: \"5px\"\n      },\n      variant: \"dark\",\n      onClick: handleSendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SockJsClient, {\n      url: \"http://localhost:8083/ws\",\n      topics: topics,\n      onConnect: onConnected,\n      onMessage: onMessageReceived,\n      ref: client => {\n        if (client) {\n          clientRef.current = client;\n        }\n        //aici dau referinta la acest client de socket\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n_s(Chat, \"qJentiBYgf/JXQjoSwBfN3rpvzk=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","SockJsClient","Button","Form","jsxDEV","_jsxDEV","Chat","_s","messages","setMessages","messageInput","setMessageInput","username","setUsername","topics","setTopics","clientRef","localStorage","getItem","current","deactivate","handleMessageChange","e","target","value","handleSendMessage","message","sender","receiver","content","sendMessage","JSON","stringify","onMessageReceived","msg","onConnected","console","log","className","children","map","index","fileName","_jsxFileName","lineNumber","columnNumber","Control","type","onChange","placeholder","style","marginTop","variant","onClick","url","onConnect","onMessage","ref","client","_c","$RefreshReg$"],"sources":["D:/UTCN AC CSC/AN 2/DSTEMA3/Tema3- Chat Demo/React/react-demo-ana/src/components/ChatPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport SockJsClient from 'react-stomp';\r\nimport '../App.css';\r\nimport { Button } from 'react-bootstrap';\r\nimport { Form } from 'react-bootstrap';\r\nconst Chat = () => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [messageInput, setMessageInput] = useState('');\r\n    const [username, setUsername] = useState('');\r\n    const [topics, setTopics] = useState([]);\r\n\r\n    // ca sa putem trimite mesaje, trebe sa facem o referinta catre obiectul de client socket, pe care o initializam cu null la inceput\r\n    //clientRef este un obiect de referință (Ref) \r\n    //creat folosind useRef hook din React\r\n    //Aceasta este o modalitate de a păstra o referință către un element sau un obiect în cadrul componentelor funcționale în React, \r\n    //care poate fi utilizată pentru a accesa și manipula acest element sau obiect.\r\n    const clientRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n         // Utilizarea useEffect pentru a seta username-ul când componenta este randata\r\n        setUsername(localStorage.getItem('username'));\r\n\r\n         // Funcția returnată va fi apelată când componenta este dezactivată, inchidem conexiunea\r\n        return () => {\r\n            if (clientRef.current && clientRef.current.deactivate) {\r\n                clientRef.current.deactivate();\r\n            }\r\n        };\r\n    }, []);\r\n\r\n     // Funcție pentru a gestiona schimbarea valorii în input-ul de mesaj\r\n    const handleMessageChange = (e) => {\r\n        setMessageInput(e.target.value);\r\n    };\r\n\r\n      // Funcție pentru a trimite mesajul\r\n    const handleSendMessage = () => {\r\n        //aici voi schimbati, va mai adaugati ce va mai trebuie, eu am lasat reciever random\r\n        const message = {\r\n            sender: username,\r\n            receiver: 'admin',\r\n            content: messageInput,\r\n        };\r\n        //current este proprietatea din obiectul de referință care conține referința efectivă către elementul sau obiectul \r\n        //pe care l-ați legat cu useRef. \r\n        //Prin accesarea proprietății current, puteți interacționa cu obiectul sau elementul din afara ciclului de viață al componentei.\r\n        //practic un mod de a accesa obiectul in sine, nu doar referinta\r\n\r\n        //sendMessage este o metodă specifică a acestui client WebSocket (SockJsClient) \r\n        //care este utilizată pentru a trimite mesaje către serverul WebSocket\r\n        if (clientRef.current && clientRef.current.sendMessage) {\r\n            clientRef.current.sendMessage('/app/chat', JSON.stringify(message));\r\n        }\r\n\r\n        //golim mesajul dupa ce l-am trimis\r\n        setMessageInput('');\r\n    };\r\n\r\n    // cand primim mesaj, pe langa cele pe care le avem deja vrem sa le pastram\r\n    //de asta punem cu .. inainte, asta inseamna ca la array-ul de mesaje deja existent, mai adaugam pe cel pe care l-am primit\r\n    const onMessageReceived = (msg) => {\r\n        setMessages([...messages, msg]);\r\n    };\r\n\r\n    //setam topicul aici ca sa evitam sa ne dea eroare de connection cannot be established yet\r\n    let onConnected = () => {\r\n      setTopics(['/topic/messages'])\r\n      console.log(\"Connected!!\")\r\n    }\r\n\r\n    return (\r\n        <div className=\"chat-container\">\r\n        <div className=\"message-container\">\r\n            {messages.map((msg, index) => (\r\n                <div\r\n                    key={index}\r\n                    className={`message ${msg.sender === username ? 'sender-me' : 'sender-other'}`} //aici am vrut sa fiu smechera sa pun clase diferite pt mesajele mele vs cele primite\r\n                >\r\n                    {msg.sender}: {msg.content} \r\n                </div>\r\n                    //aici pot accesa senderu si contetu, ca mi le-am definit asa in java, voi afisati cum vreti\r\n            ))}\r\n        </div>\r\n        <Form>\r\n                <Form.Control\r\n                    type=\"text\"\r\n                    value={messageInput}\r\n                    onChange={handleMessageChange}\r\n                    placeholder=\"Type your message...\"\r\n                    style={{ marginTop:\"5px\"}}\r\n                    className=\"bg-dark text-light\" \r\n                />\r\n         </Form>\r\n        <Button style={{marginTop:\"5px\"}} variant='dark' onClick={handleSendMessage}>Send</Button>\r\n        <SockJsClient\r\n            url=\"http://localhost:8083/ws\"\r\n            topics={topics}\r\n            onConnect={onConnected}\r\n            onMessage={onMessageReceived}\r\n            ref={(client) => {\r\n              if (client) {\r\n                  clientRef.current = client;\r\n              }\r\n              //aici dau referinta la acest client de socket\r\n          }}\r\n        />\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}